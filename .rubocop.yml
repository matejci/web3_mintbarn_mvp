require:
  - rubocop-performance
  - rubocop-rails

AllCops:
  TargetRubyVersion: 3.1.0
  # RuboCop has a bunch of cops enabled by default. This setting tells RuboCop
  # to ignore them, so only the ones explicitly set in this file are enabled.
  # DisabledByDefault: true
  NewCops: enable
  Exclude:
    - '**/tmp/**/*'
    - '**/templates/**/*'
    - '**/vendor/**/*'
    - '**/test/**/*'
    - '**/db/**/*'

Performance:
  Exclude:
    - '**/test/**/*'

# Prefer &&/|| over and/or.
Style/AndOr:
  Enabled: true

Layout/AccessModifierIndentation:
  Enabled: false

# Align `when` with `case`.
Layout/CaseIndentation:
  Enabled: true

Layout/ClosingHeredocIndentation:
  Enabled: true

# Align `end` with the matching keyword or starting expression except for
# assignments, where it should be aligned with the LHS.
Layout/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable
  AutoCorrect: true

# Two spaces, no tabs (for indentation).
Layout/IndentationWidth:
  Enabled: true

Layout/ElseAlignment:
  Enabled: false

Style/DefWithParentheses:
  Enabled: true

# Defining a method with parameters needs parentheses.
Style/MethodDefParentheses:
  Enabled: true

Style/FrozenStringLiteralComment:
  Enabled: true
  EnforcedStyle: always
  Exclude:
    - '**/db/**/*'
    - '**/test/**/*'

Style/RedundantFreeze:
  Enabled: true

# Use `foo {}` not `foo{}`.
Layout/SpaceBeforeBlockBraces:
  Enabled: true

# Use `foo { bar }` not `foo {bar}`.
Layout/SpaceInsideBlockBraces:
  Enabled: true
  EnforcedStyleForEmptyBraces: space

# Check quotes usage according to lint rule below.
Style/StringLiterals:
  Enabled: true
  Exclude:
    - '**/db/**/*'
    - '**/test/**/*'

Style/SymbolArray:
  Enabled: false

Style/WordArray:
  Exclude:
    - '**/db/**/*'

# Detect hard tabs, no hard tabs.
Layout/IndentationStyle:
  Enabled: true

# Empty lines should not have any spaces.
Layout/TrailingEmptyLines:
  Enabled: true

# No trailing whitespace.
Layout/TrailingWhitespace:
  Enabled: true

LineLength:
  Max: 180

Lint/DuplicateRequire:
  Enabled: true

# Use my_method(my_arg) not my_method( my_arg ) or my_method my_arg.
Lint/RequireParentheses:
  Enabled: true

Lint/RedundantStringCoercion:
  Enabled: true

Lint/UriEscapeUnescape:
  Enabled: true

Lint/UselessAssignment:
  Enabled: true

Lint/DeprecatedClassMethods:
  Enabled: true

Lint/MissingSuper:
  Exclude:
    - 'app/services/nft_port/**/*'

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/ClassLength:
  Max: 150

Metrics/MethodLength:
  Max: 50

Style/Documentation:
  Enabled: false

Style/ParenthesesAroundCondition:
  Enabled: true

Style/RedundantBegin:
  Enabled: true

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: true

Style/RedundantRegexpEscape:
  Enabled: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: true

# Prefer Foo.method over Foo::method
Style/ColonMethodCall:
  Enabled: true

Style/TrivialAccessors:
  Enabled: true

Style/InverseMethods:
  Enabled: false

Style/HashSyntax:
  Enabled: false

Performance/BindCall:
  Enabled: true

Performance/FlatMap:
  Enabled: true

Performance/RedundantMerge:
  Enabled: true

Performance/StartWith:
  Enabled: true

Performance/EndWith:
  Enabled: true

Performance/RegexpMatch:
  Enabled: true

Performance/ReverseEach:
  Enabled: true

Performance/UnfreezeString:
  Enabled: true

Performance/DeletePrefix:
  Enabled: true

Performance/DeleteSuffix:
  Enabled: true

Rails/WhereExists:
  Enabled: false

Rails/HasAndBelongsToMany:
  Enabled: false

Rails/SkipsModelValidations:
  Enabled: false

Rails/FindEach:
  Enabled: false # Mongoid doesn't support #find_each

Style/CommentedKeyword:
  Enabled: false

Style/NumericLiterals:
  Exclude:
    - '**/db/**/*'

Naming/VariableNumber:
  Enabled: false

Style/Proc:
  Enabled: false

Rails/Output:
  Exclude:
      - 'app/channels/room_channel.rb'
      - 'app/channels/room_list_channel.rb'

Rails/I18nLocaleTexts:
  Enabled: false
